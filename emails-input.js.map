{"version":3,"file":"emails-input.js","sources":["../src/board.ts","../src/utils.ts","../src/button.ts","../src/container.ts","../src/email.ts","../src/index.ts"],"sourcesContent":["import {EmailsInputState} from './state';\n\nexport interface BoardParams {\n  name: string;\n}\n\nexport const initBoard = (\n  state: EmailsInputState,\n  board: BoardParams | undefined,\n) => {\n  const name = board?.name || 'Board name';\n\n  const {boardName, title} = state.container;\n\n  boardName.textContent = name;\n  title.insertBefore(document.createTextNode('Share '), boardName);\n  title.appendChild(document.createTextNode(' with others'));\n};\n","export const createElement = (parent: Element, type: string): Element => {\n  const elem = document.createElement('div');\n  elem.className = 'emails-input-' + type;\n  parent.appendChild(elem);\n  return elem;\n};\n","import {createElement} from './utils';\n\nexport const createButtons = (\n  root: Element,\n): {wrapper: Element; add: Element; count: Element} => {\n  const wrapper = createElement(root, 'buttons');\n\n  const add = document.createElement('button');\n  add.className = 'emails-input-button';\n  add.textContent = 'Add email';\n  wrapper.appendChild(add);\n\n  const count = document.createElement('button');\n  count.className = 'emails-input-button';\n  count.textContent = 'Get emails count';\n  wrapper.appendChild(count);\n\n  return {wrapper, add, count};\n};\n","import {createElement} from './utils';\nimport {createButtons} from './button';\n\nexport interface EmailsInputContainer {\n  root: Element;\n\n  main: Element;\n  buttons: {\n    wrapper: Element;\n    add: Element;\n    count: Element;\n  };\n\n  title: Element;\n  boardName: Element;\n\n  area: Element;\n}\n\nexport const initContainer = (root: Element): EmailsInputContainer => {\n  root.className += ' emails-input-container';\n\n  const main = createElement(root, 'main');\n\n  const title = createElement(main, 'title');\n  const boardName = createElement(title, 'board-name');\n\n  const area = createElement(main, 'area');\n  const buttons = createButtons(main);\n\n  return {\n    root,\n    main,\n    title,\n    boardName,\n    area,\n    buttons,\n  };\n};\n","import {createElement} from './utils';\n\nconst createDeleteButton = (elem: Element): Element => {\n  const btn = document.createElement('span');\n  btn.className = 'emails-input-email-delete';\n  elem.appendChild(btn);\n  return btn;\n};\n\n// isValid returns true when the email is considered valid. This checks if\n// there is an at-sign present in the email address.\nconst isValid = (email: string) => email.indexOf('@') > -1;\n\nexport class EmailInput {\n  element: Element;\n  delete: Element | undefined;\n  valid: boolean;\n\n  constructor(\n    public area: Element,\n    public emails: EmailInput[],\n    public email: string,\n  ) {\n    const elem = createElement(area, 'email');\n    elem.textContent = email;\n    this.element = elem;\n\n    // Mark email as invalid if it is.\n    this.valid = isValid(email);\n    if (!this.valid) elem.classList.add('emails-input-email-invalid');\n\n    // Create the delete button.\n    const btn = createDeleteButton(elem);\n    btn.addEventListener('click', this.onRemove.bind(this));\n    this.delete = btn;\n  }\n\n  onRemove() {\n    if (!this.delete) return; // satisfy compiler null check.\n\n    // Remove event handler. This is not strictly necessary because the parent\n    // node is removed and the garbage collector will clean this up afterwards.\n    this.delete.removeEventListener('click', this.onRemove);\n\n    // Remove the parent email input element from the area.\n    this.area.removeChild(this.element);\n\n    // Remove email input from input array.\n    const idx = this.emails.indexOf(this);\n    this.emails.splice(idx, 1);\n  }\n}\n\nexport const initEmails = (area: Element, emails: string[]): EmailInput[] => {\n  const inputs: EmailInput[] = [];\n  emails.forEach(e => {\n    inputs.push(new EmailInput(area, inputs, e));\n  });\n  return inputs;\n};\n\nexport const addEmail = (\n  area: Element,\n  emails: EmailInput[],\n): ((input: string) => void) => {\n  return (input: string) => {\n    // Split input into multiple emails (delimited by comma or newline).\n    const parts = input.split(/[,\\r\\n]/);\n\n    parts.forEach(email => {\n      // Don't add empty email addresses.\n      email = email.trim();\n      if (!email.length) return;\n\n      console.log('email', email);\n\n      emails.push(new EmailInput(area, emails, email));\n    });\n  };\n};\n\n// randomEmail returns a semi-randomized, valid email address.\nexport const randomEmail = (): string => {\n  const alphabet = 'abcdef012345';\n\n  const randomChar = () =>\n    alphabet.charAt(Math.round(alphabet.length * Math.random()));\n\n  let result = '';\n\n  for (var i = 0; i < 10; i++) result += randomChar();\n\n  result += '@';\n\n  for (var i = 0; i < 10; i++) result += randomChar();\n\n  return result + '.com';\n};\n\nexport const addNewEmail = (\n  area: Element,\n  emails: EmailInput[],\n): (() => void) => {\n  const add = addEmail(area, emails);\n  return () => add(randomEmail());\n};\n\nexport const countValidEmails = (emails: EmailInput[]): (() => void) => {\n  return () => {\n    const count = emails.filter(e => e.valid).length;\n    alert(count);\n  };\n};\n\nexport const initPlaceholder = (\n  area: Element,\n  add: (email: string) => void,\n): HTMLInputElement => {\n  const input = document.createElement('input');\n  input.className = 'emails-input-placeholder';\n  area.appendChild(input);\n  input.placeholder = 'add more peopleâ€¦';\n\n  const onAdd = (e: UIEvent) => {\n    if (!e.target) return; // ignore event without target element.\n    const target = e.target as HTMLInputElement;\n\n    // Add email address.\n    add(target.value);\n\n    // Clear input value.\n    input.value = '';\n  };\n\n  input.addEventListener('blur', onAdd);\n  input.addEventListener('keyup', (e: KeyboardEvent) => {\n    const code = e.code || e.keyCode;\n    // Detect comma or enter key.\n    const comma = 188; // fallback key code for IE11\n    const enter = 13; // fallback key code for IE11\n    if (['Enter', 'Comma', enter, comma].indexOf(code) > -1) onAdd(e);\n  });\n  input.addEventListener('paste', (e: ClipboardEvent) => {\n    const clipboard = e.clipboardData || (window as any).clipboardData;\n    if (!clipboard) return; // ignore event without clipboard data.\n\n    add(clipboard.getData('text'));\n\n    // Clear input value.\n    input.value = '';\n\n    // Prevent further event processing.\n    e.preventDefault();\n    e.stopPropagation();\n  });\n\n  return input;\n};\n","import {EmailsInputState} from './state';\nimport {BoardParams, initBoard} from './board';\nimport {initContainer} from './container';\nimport {\n  initEmails,\n  initPlaceholder,\n  addEmail,\n  countValidEmails,\n  addNewEmail,\n} from './email';\n\nimport './index.scss';\n\ninterface EmailsInputParams {\n  emails?: string[];\n  board?: BoardParams;\n}\n\nconst EmailsInput = function (\n  root: Element | null,\n  params?: EmailsInputParams,\n) {\n  // Early exit when root node is not set.\n  if (!root) return;\n\n  const state: EmailsInputState = {\n    container: initContainer(root),\n    emails: [],\n  };\n\n  initBoard(state, params?.board);\n\n  const emails = params?.emails;\n  if (emails) {\n    state.emails = initEmails(state.container.area, emails);\n  }\n\n  console.log('state', state);\n\n  const {buttons, area} = state.container;\n\n  const placeholder = initPlaceholder(area, addEmail(area, state.emails));\n\n  buttons.add.addEventListener('click', addNewEmail(area, state.emails));\n  buttons.count.addEventListener('click', countValidEmails(state.emails));\n\n  area.addEventListener('click', (e: Event) => {\n    // Focus placeholder when input area is clicked.\n    if (e.target == area) placeholder.focus();\n  });\n};\n\nexport default EmailsInput;\n"],"names":[],"mappings":"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"}